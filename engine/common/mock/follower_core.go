// Code generated by mockery v2.21.4. DO NOT EDIT.

package mock

import (
	flow "github.com/onflow/flow-go/model/flow"
	messages "github.com/onflow/flow-go/model/messages"

	mock "github.com/stretchr/testify/mock"
)

// FollowerCore is an autogenerated mock type for the FollowerCore type
type FollowerCore struct {
	mock.Mock
}

// OnBlockProposal provides a mock function with given fields: originID, proposal
func (_m *FollowerCore) OnBlockProposal(originID flow.Identifier, proposal *messages.BlockProposal) error {
	ret := _m.Called(originID, proposal)

	var r0 error
	if rf, ok := ret.Get(0).(func(flow.Identifier, *messages.BlockProposal) error); ok {
		r0 = rf(originID, proposal)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// OnFinalizedBlock provides a mock function with given fields: block
func (_m *FollowerCore) OnFinalizedBlock(block *flow.Header) error {
	ret := _m.Called(block)

	var r0 error
	if rf, ok := ret.Get(0).(func(*flow.Header) error); ok {
		r0 = rf(block)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewFollowerCore interface {
	mock.TestingT
	Cleanup(func())
}

// NewFollowerCore creates a new instance of FollowerCore. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewFollowerCore(t mockConstructorTestingTNewFollowerCore) *FollowerCore {
	mock := &FollowerCore{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
