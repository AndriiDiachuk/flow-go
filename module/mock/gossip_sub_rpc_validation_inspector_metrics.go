// Code generated by mockery v2.21.4. DO NOT EDIT.

package mock

import (
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// GossipSubRPCValidationInspectorMetrics is an autogenerated mock type for the GossipSubRPCValidationInspectorMetrics type
type GossipSubRPCValidationInspectorMetrics struct {
	mock.Mock
}

// AsyncProcessingFinished provides a mock function with given fields: msgType, duration
func (_m *GossipSubRPCValidationInspectorMetrics) AsyncProcessingFinished(msgType string, duration time.Duration) {
	_m.Called(msgType, duration)
}

// AsyncProcessingStarted provides a mock function with given fields: msgType
func (_m *GossipSubRPCValidationInspectorMetrics) AsyncProcessingStarted(msgType string) {
	_m.Called(msgType)
}

// IHavePreProcessingFinished provides a mock function with given fields: ihaveMsgType, sampleSize, duration
func (_m *GossipSubRPCValidationInspectorMetrics) IHavePreProcessingFinished(ihaveMsgType string, sampleSize uint, duration time.Duration) {
	_m.Called(ihaveMsgType, sampleSize, duration)
}

// IHavePreProcessingStarted provides a mock function with given fields: ihaveMsgType, sampleSize
func (_m *GossipSubRPCValidationInspectorMetrics) IHavePreProcessingStarted(ihaveMsgType string, sampleSize uint) {
	_m.Called(ihaveMsgType, sampleSize)
}

// PreProcessingFinished provides a mock function with given fields: msgType, duration
func (_m *GossipSubRPCValidationInspectorMetrics) PreProcessingFinished(msgType string, duration time.Duration) {
	_m.Called(msgType, duration)
}

// PreProcessingStarted provides a mock function with given fields: msgType
func (_m *GossipSubRPCValidationInspectorMetrics) PreProcessingStarted(msgType string) {
	_m.Called(msgType)
}

type mockConstructorTestingTNewGossipSubRPCValidationInspectorMetrics interface {
	mock.TestingT
	Cleanup(func())
}

// NewGossipSubRPCValidationInspectorMetrics creates a new instance of GossipSubRPCValidationInspectorMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewGossipSubRPCValidationInspectorMetrics(t mockConstructorTestingTNewGossipSubRPCValidationInspectorMetrics) *GossipSubRPCValidationInspectorMetrics {
	mock := &GossipSubRPCValidationInspectorMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
