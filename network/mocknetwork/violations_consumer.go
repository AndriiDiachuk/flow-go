// Code generated by mockery v2.13.0. DO NOT EDIT.

package mocknetwork

import (
	flow "github.com/onflow/flow-go/model/flow"
	mock "github.com/stretchr/testify/mock"
)

// ViolationsConsumer is an autogenerated mock type for the ViolationsConsumer type
type ViolationsConsumer struct {
	mock.Mock
}

// OnSenderEjectedError provides a mock function with given fields: identity, peerID, msgType, channel, isUnicast, err
func (_m *ViolationsConsumer) OnSenderEjectedError(identity *flow.Identity, peerID string, msgType string, channel string, isUnicast bool, err error) {
	_m.Called(identity, peerID, msgType, channel, isUnicast, err)
}

// OnUnAuthorizedSenderError provides a mock function with given fields: identity, peerID, msgType, channel, isUnicast, err
func (_m *ViolationsConsumer) OnUnAuthorizedSenderError(identity *flow.Identity, peerID string, msgType string, channel string, isUnicast bool, err error) {
	_m.Called(identity, peerID, msgType, channel, isUnicast, err)
}

// OnUnknownMsgTypeError provides a mock function with given fields: identity, peerID, msgType, channel, isUnicast, err
func (_m *ViolationsConsumer) OnUnknownMsgTypeError(identity *flow.Identity, peerID string, msgType string, channel string, isUnicast bool, err error) {
	_m.Called(identity, peerID, msgType, channel, isUnicast, err)
}

type NewViolationsConsumerT interface {
	mock.TestingT
	Cleanup(func())
}

// NewViolationsConsumer creates a new instance of ViolationsConsumer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewViolationsConsumer(t NewViolationsConsumerT) *ViolationsConsumer {
	mock := &ViolationsConsumer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
