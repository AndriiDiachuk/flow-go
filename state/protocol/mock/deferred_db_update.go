// Code generated by mockery v2.21.4. DO NOT EDIT.

package mock

import (
	flow "github.com/onflow/flow-go/model/flow"
	mock "github.com/stretchr/testify/mock"

	transaction "github.com/onflow/flow-go/storage/badger/transaction"
)

// DeferredDBUpdate is an autogenerated mock type for the DeferredDBUpdate type
type DeferredDBUpdate struct {
	mock.Mock
}

// Execute provides a mock function with given fields: tx, blockID
func (_m *DeferredDBUpdate) Execute(tx *transaction.Tx, blockID flow.Identifier) error {
	ret := _m.Called(tx, blockID)

	var r0 error
	if rf, ok := ret.Get(0).(func(*transaction.Tx, flow.Identifier) error); ok {
		r0 = rf(tx, blockID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewDeferredDBUpdate interface {
	mock.TestingT
	Cleanup(func())
}

// NewDeferredDBUpdate creates a new instance of DeferredDBUpdate. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDeferredDBUpdate(t mockConstructorTestingTNewDeferredDBUpdate) *DeferredDBUpdate {
	mock := &DeferredDBUpdate{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
